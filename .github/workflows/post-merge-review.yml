name: Post-merge tests and review task

on:
  pull_request:
    types:
      - closed

jobs:
  post-merge-review:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout merged commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run test suite
        run: npm test

      - name: Ensure code review label exists
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const labelName = 'code-review';
            try {
              await github.rest.issues.getLabel({ owner, repo, name: labelName });
              core.info(`Label "${labelName}" already exists.`);
            } catch (error) {
              if (error.status === 404) {
                await github.rest.issues.createLabel({
                  owner,
                  repo,
                  name: labelName,
                  color: '1d76db',
                  description: 'Post-merge code review tasks'
                });
                core.info(`Created label "${labelName}".`);
              } else {
                throw error;
              }
            }

      - name: Create post-merge code review task
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pr = context.payload.pull_request;
            const title = `Code review: ${pr.title} (#${pr.number})`;
            const { data: existingIssues } = await github.rest.issues.listForRepo({
              owner,
              repo,
              state: 'open',
              labels: 'code-review',
              per_page: 100
            });
            if (existingIssues.some(issue => issue.title === title)) {
              core.info(`Review task already exists for PR #${pr.number}.`);
              return;
            }
            const bodyLines = [
              `A post-merge code review is required for [PR #${pr.number}](${pr.html_url}).`,
              '',
              `- Merge commit: ${pr.merge_commit_sha}`,
              `- Author: @${pr.user.login}`,
              `- Merged by: @${pr.merged_by?.login ?? 'unknown'}`,
              '',
              'Please verify the deployed changes and capture any follow-up actions.'
            ];
            await github.rest.issues.create({
              owner,
              repo,
              title,
              body: bodyLines.join('\n'),
              labels: ['code-review']
            });
            core.info(`Created review task for PR #${pr.number}.`);
